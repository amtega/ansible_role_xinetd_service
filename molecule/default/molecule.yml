---

dependency:
  name: galaxy
  enabled: yes
  options:
    ignore-certs: yes
    ignore-errors: yes
    role-file: "${MOLECULE_SCENARIO_DIRECTORY}/requirements.yml"
    requirements-file: "${MOLECULE_SCENARIO_DIRECTORY}/requirements.yml"
driver:
  name: docker
lint: "${MOLECULE_SCENARIO_DIRECTORY}/linters.sh"
platforms:
  - name: "centos6-${INSTANCE_UUID:-1}"
    image: centos:6
    dockerfile: Dockerfile.centos6.j2
    command: /sbin/init
    tmpfs:
      - /run
      - /tmp
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    groups:
      - molecule_hosts
  - name: "centos7-${INSTANCE_UUID:-1}"
    image: centos:7
    dockerfile: Dockerfile.systemd.j2
    command: /sbin/init
    tmpfs:
      - /run
      - /tmp
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    groups:
      - molecule_hosts
  - name: "fedora33-${INSTANCE_UUID:-1}"
    image: fedora:33
    dockerfile: Dockerfile.systemd.j2
    command: /sbin/init
    tmpfs:
      - /run
      - /tmp
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    groups:
      - molecule_hosts
      - molecule_hosts_fedora
provisioner:
  name: ansible
  inventory:
    hosts:
      molecule_hosts:
        vars:
          xinetd_service_name: echo
          xinetd_service_id: echo-stream
          xinetd_service_type: INTERNAL
          xinetd_service_disable: no
          xinetd_service_socket_type: stream
          xinetd_service_protocol: tcp
          xinetd_service_user: root
          xinetd_service_wait: "no"
          xinetd_service_only_from: [ 127.0.0.1 ]
          xinetd_service_no_access: [ 127.0.0.5 ]
      molecule_hosts_fedora:
        vars:
          ansible_python_interpreter: /usr/bin/python3
verifier:
  name: ansible
